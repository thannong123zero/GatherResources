// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultipleDatabase.DataAccess;

#nullable disable

namespace MultipleDatabase.Migrations
{
    [DbContext(typeof(ApplicationDatabaseContext))]
    [Migration("20240722074948_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MultipleDatabase.DTOs.MallDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameVN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Table_Mall", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedOn = new DateTime(2024, 7, 22, 14, 49, 47, 456, DateTimeKind.Local).AddTicks(1835),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedOn = new DateTime(2024, 7, 22, 14, 49, 47, 456, DateTimeKind.Local).AddTicks(1845),
                            NameEN = "Thiso Sala Center",
                            NameVN = "Trung Tâm Thiso Sala"
                        },
                        new
                        {
                            ID = 2,
                            CreatedOn = new DateTime(2024, 7, 22, 14, 49, 47, 456, DateTimeKind.Local).AddTicks(1848),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedOn = new DateTime(2024, 7, 22, 14, 49, 47, 456, DateTimeKind.Local).AddTicks(1848),
                            NameEN = "Thiso Mall Phan Van Tri",
                            NameVN = "Thiso Mall Phan Văn Trị"
                        },
                        new
                        {
                            ID = 3,
                            CreatedOn = new DateTime(2024, 7, 22, 14, 49, 47, 456, DateTimeKind.Local).AddTicks(1849),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedOn = new DateTime(2024, 7, 22, 14, 49, 47, 456, DateTimeKind.Local).AddTicks(1850),
                            NameEN = "Thiso Mall Truong Chinh - Phan Huy Ich",
                            NameVN = "Thiso Mall Trường Chinh - Phan Huy Ích"
                        });
                });

            modelBuilder.Entity("MultipleDatabase.DTOs.ParkingDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MallID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameVN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Table_Parking", (string)null);
                });

            modelBuilder.Entity("MultipleDatabase.DTOs.ParkingHistoryDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CardCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EntryEmployee")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EntryLicensePlate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ExitEmployee")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ExitLicensePlate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ExitTime")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Fare")
                        .HasColumnType("double");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MallID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ParkingID")
                        .HasColumnType("int");

                    b.Property<string>("RegisterdLicensePlate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("double");

                    b.Property<string>("TotalTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("VehicleTypeID")
                        .HasColumnType("int");

                    b.Property<string>("VisitorName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VoucherCode")
                        .HasColumnType("longtext");

                    b.Property<string>("VoucherType")
                        .HasColumnType("longtext");

                    b.Property<double?>("VoucherValue")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.ToTable("Table_ParkingHistory", (string)null);
                });

            modelBuilder.Entity("MultipleDatabase.DTOs.RegistrationTypeDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameVN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Table_RegistrationType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            NameEN = "Member",
                            NameVN = "Thành Viên"
                        },
                        new
                        {
                            ID = 2,
                            NameEN = "Member",
                            NameVN = "Thành Viên"
                        },
                        new
                        {
                            ID = 3,
                            NameEN = "Visitor",
                            NameVN = "Khách Vãng Lai"
                        });
                });

            modelBuilder.Entity("MultipleDatabase.DTOs.RevenueDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AccessTimes")
                        .HasColumnType("int");

                    b.Property<double>("CashAmount")
                        .HasColumnType("double");

                    b.Property<double>("LostCardFee")
                        .HasColumnType("double");

                    b.Property<int>("MallID")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfVourcher")
                        .HasColumnType("int");

                    b.Property<int?>("ParkingID")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Revenue")
                        .HasColumnType("double");

                    b.Property<int>("VihicleTypeID")
                        .HasColumnType("int");

                    b.Property<double>("VoucherValue")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.ToTable("Table_Revenue", (string)null);
                });

            modelBuilder.Entity("MultipleDatabase.DTOs.VehicleTypeDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameVN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Table_VehicleType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedOn = new DateTime(2024, 7, 22, 14, 49, 47, 456, DateTimeKind.Local).AddTicks(9465),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedOn = new DateTime(2024, 7, 22, 14, 49, 47, 456, DateTimeKind.Local).AddTicks(9468),
                            NameEN = "Car",
                            NameVN = "Ô tô"
                        },
                        new
                        {
                            ID = 2,
                            CreatedOn = new DateTime(2024, 7, 22, 14, 49, 47, 456, DateTimeKind.Local).AddTicks(9470),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedOn = new DateTime(2024, 7, 22, 14, 49, 47, 456, DateTimeKind.Local).AddTicks(9470),
                            NameEN = "Motorbike",
                            NameVN = "Xe máy"
                        },
                        new
                        {
                            ID = 3,
                            CreatedOn = new DateTime(2024, 7, 22, 14, 49, 47, 456, DateTimeKind.Local).AddTicks(9471),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedOn = new DateTime(2024, 7, 22, 14, 49, 47, 456, DateTimeKind.Local).AddTicks(9471),
                            NameEN = "Bicycle",
                            NameVN = "Xe đạp"
                        });
                });

            modelBuilder.Entity("MultipleDatabase.DTOs.VoucherDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("VoucherTypeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Table_Voucher", (string)null);
                });

            modelBuilder.Entity("MultipleDatabase.DTOs.VoucherTypeDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameVN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Table_VoucherType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedOn = new DateTime(2024, 7, 22, 14, 49, 47, 457, DateTimeKind.Local).AddTicks(1951),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedOn = new DateTime(2024, 7, 22, 14, 49, 47, 457, DateTimeKind.Local).AddTicks(1954),
                            NameEN = "Emart",
                            NameVN = "Emart"
                        },
                        new
                        {
                            ID = 2,
                            CreatedOn = new DateTime(2024, 7, 22, 14, 49, 47, 457, DateTimeKind.Local).AddTicks(1956),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedOn = new DateTime(2024, 7, 22, 14, 49, 47, 457, DateTimeKind.Local).AddTicks(1956),
                            NameEN = "Thisky Hall",
                            NameVN = "Thisky Hall"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
