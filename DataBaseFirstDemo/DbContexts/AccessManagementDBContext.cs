// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using DataBaseFirstDemo.Models;
using Microsoft.EntityFrameworkCore;

namespace DataBaseFirstDemo.DbContexts;

public partial class AccessManagementDBContext : DbContext
{
    public AccessManagementDBContext(DbContextOptions<AccessManagementDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<TableAccount> TableAccounts { get; set; }

    public virtual DbSet<TableBorrowCard> TableBorrowCards { get; set; }

    public virtual DbSet<TableCard> TableCards { get; set; }

    public virtual DbSet<TableCardGroup> TableCardGroups { get; set; }

    public virtual DbSet<TableCardType> TableCardTypes { get; set; }

    public virtual DbSet<TableEmployee> TableEmployees { get; set; }

    public virtual DbSet<TableRole> TableRoles { get; set; }

    public virtual DbSet<TableStore> TableStores { get; set; }

    public virtual DbSet<TableVisitor> TableVisitors { get; set; }

    public virtual DbSet<TableVisitorType> TableVisitorTypes { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<TableAccount>(entity =>
        {
            entity.ToTable("Table_Account");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 643, DateTimeKind.Local).AddTicks(46));
            entity.Property(e => e.EmployeeId).HasColumnName("EmployeeID");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.ModifiedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 643, DateTimeKind.Local).AddTicks(440));
            entity.Property(e => e.Password).IsRequired();
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.StoreId).HasColumnName("StoreID");
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(255);
        });

        modelBuilder.Entity<TableBorrowCard>(entity =>
        {
            entity.ToTable("Table_BorrowCard");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardId).HasColumnName("CardID");
            entity.Property(e => e.CreatedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 643, DateTimeKind.Local).AddTicks(3157));
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.ModifiedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 643, DateTimeKind.Local).AddTicks(3563));
            entity.Property(e => e.VisitorId).HasColumnName("VisitorID");
        });

        modelBuilder.Entity<TableCard>(entity =>
        {
            entity.ToTable("Table_Card");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardGroupId).HasColumnName("CardGroupID");
            entity.Property(e => e.CardTypeId).HasColumnName("CardTypeID");
            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.CreatedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 643, DateTimeKind.Local).AddTicks(7044));
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.ModifiedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 643, DateTimeKind.Local).AddTicks(7332));
        });

        modelBuilder.Entity<TableCardGroup>(entity =>
        {
            entity.ToTable("Table_CardGroup");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 643, DateTimeKind.Local).AddTicks(9967));
            entity.Property(e => e.DescriptionEn).HasColumnName("DescriptionEN");
            entity.Property(e => e.DescriptionVn).HasColumnName("DescriptionVN");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.ModifiedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 644, DateTimeKind.Local).AddTicks(316));
            entity.Property(e => e.NameEn)
                .IsRequired()
                .HasColumnName("NameEN");
            entity.Property(e => e.NameVn)
                .IsRequired()
                .HasColumnName("NameVN");
            entity.Property(e => e.StoreId).HasColumnName("StoreID");
        });

        modelBuilder.Entity<TableCardType>(entity =>
        {
            entity.ToTable("Table_CardType");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 644, DateTimeKind.Local).AddTicks(2881));
            entity.Property(e => e.DescriptionEn).HasColumnName("DescriptionEN");
            entity.Property(e => e.DescriptionVn).HasColumnName("DescriptionVN");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.ModifiedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 644, DateTimeKind.Local).AddTicks(3249));
            entity.Property(e => e.NameEn)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("NameEN");
            entity.Property(e => e.NameVn)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("NameVN");
        });

        modelBuilder.Entity<TableEmployee>(entity =>
        {
            entity.ToTable("Table_Employee");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");
            entity.Property(e => e.Email).IsRequired();
            entity.Property(e => e.FullName).IsRequired();
            entity.Property(e => e.Gender).IsRequired();
            entity.Property(e => e.PhoneNumber).IsRequired();
        });

        modelBuilder.Entity<TableRole>(entity =>
        {
            entity.ToTable("Table_Role");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DescriptionEn).HasColumnName("DescriptionEN");
            entity.Property(e => e.DescriptionVn).HasColumnName("DescriptionVN");
            entity.Property(e => e.NameEn)
                .IsRequired()
                .HasMaxLength(225)
                .HasColumnName("NameEN");
            entity.Property(e => e.NameVn)
                .IsRequired()
                .HasMaxLength(225)
                .HasColumnName("NameVN");
        });

        modelBuilder.Entity<TableStore>(entity =>
        {
            entity.ToTable("Table_Store");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.CreatedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 645, DateTimeKind.Local).AddTicks(6162));
            entity.Property(e => e.DescriptionEn).HasColumnName("DescriptionEN");
            entity.Property(e => e.DescriptionVn).HasColumnName("DescriptionVN");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.ModifiedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 645, DateTimeKind.Local).AddTicks(6525));
            entity.Property(e => e.NameEn)
                .IsRequired()
                .HasMaxLength(225)
                .HasColumnName("NameEN");
            entity.Property(e => e.NameVn)
                .IsRequired()
                .HasMaxLength(225)
                .HasColumnName("NameVN");
        });

        modelBuilder.Entity<TableVisitor>(entity =>
        {
            entity.ToTable("Table_Visitor");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 644, DateTimeKind.Local).AddTicks(6338));
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Idcard)
                .IsRequired()
                .HasColumnName("IDCard");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.ModifiedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 644, DateTimeKind.Local).AddTicks(6658));
            entity.Property(e => e.PhoneNumber).IsRequired();
            entity.Property(e => e.StoreId).HasColumnName("StoreID");
            entity.Property(e => e.VistorTypeId)
                .HasDefaultValue(1)
                .HasColumnName("VistorTypeID");
        });

        modelBuilder.Entity<TableVisitorType>(entity =>
        {
            entity.ToTable("Table_VisitorType");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 644, DateTimeKind.Local).AddTicks(9380));
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.ModifiedOn).HasDefaultValue(new DateTime(2024, 5, 27, 11, 52, 35, 644, DateTimeKind.Local).AddTicks(9710));
            entity.Property(e => e.NameEn)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("NameEN");
            entity.Property(e => e.NameVn)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("NameVN");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}