@{
    ViewData["Title"] = "Home Page";
}
<script src="https://unpkg.com/html5-qrcode" type="text/javascript"></script>
<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <div id="reader" width="600px"></div>
    <button type="button" id="openQrScanner">
        Quét Mã QR
    </button>
</div>
<!-- Modal Quét Mã QR -->
<div class="modal fade" id="qrScannerModal" tabindex="-1" aria-labelledby="qrScannerLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="qrScannerLabel">Quét Mã QR</h5>
                <button type="button" id="qrScannerClose" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <div id="qr-reader" style="margin: auto;" class="qr-reader"></div>
                <input type="text" name="name" id="stateId" readOnly class="d-none" />
                <div id="qr-reader-results" style="margin-top: 20px; text-align: center;">
                    <h4>Kết quả:</h4>
                    <p id="qr-result">Đang chờ quét...</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>
<script>
    //     function onScanSuccess(decodedText, decodedResult) {
    //   // handle the scanned code as you like, for example:
    //   console.log(`Code matched = ${decodedText}`, decodedResult);
    // }

    // function onScanFailure(error) {
    //   // handle scan failure, usually better to ignore and keep scanning.
    //   // for example:
    //   console.warn(`Code scan error = ${error}`);
    // }

    // let html5QrcodeScanner = new Html5QrcodeScanner(
    //   "reader",
    //   { fps: 10, qrbox: {width: 250, height: 250} },
    //   /* verbose= */ false);
    // html5QrcodeScanner.render(onScanSuccess, onScanFailure);
    // Khi click vào icon QR, mở modal quét mã QR
    const html5QrCode = new Html5Qrcode("qr-reader");
        // This method will trigger user permissions
    const config = { fps: 10, qrbox: { width: 250, height: 250 } };
    const qrCodeSuccessCallback = (decodedText, decodedResult) => {
        console.log(`Code matched = ${decodedText}`, decodedResult);
         html5QrCode.stop().then((ignore) => {
              // QR Code scanning is stopped.
            }).catch((err) => {
              // Stop failed, handle it.
            });
        /* handle success */
    };


    document.getElementById("openQrScanner").addEventListener("click", function () {
                    const modal = new bootstrap.Modal(document.getElementById('qrScannerModal'));
                    modal.show();
                        // If you want to prefer back camera
                    html5QrCode.start({ facingMode: "environment" }, config, qrCodeSuccessCallback);
                   
                });
    // Khi đóng modal, dừng camera
    document.getElementById("qrScannerModal").addEventListener("hidden.bs.modal",  function () {
            html5QrCode.stop().then((ignore) => {
              // QR Code scanning is stopped.
            }).catch((err) => {
              // Stop failed, handle it.
            });
    });
</script>