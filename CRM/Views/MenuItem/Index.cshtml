@using SharedLibrary.UserInterfaceDTO
@model IEnumerable<SharedLibrary.UserInterfaceDTO.MenuItemUI>

@{
    ViewData["Title"] = "Index";
    IEnumerable<MenuGroupUI> menuGroups = (IEnumerable<MenuGroupUI>)ViewBag.MenuGroupList;
}
<div class="container pt-2">
    <h2>Menu Item List</h2>

    <div class="d-flex justify-content-between">
        <!-- Example single danger button -->
        <div>
            <span class="me-2">Filter: </span>
            @if(menuGroups != null)
            {
                <div class="btn-group">
                    <button type="button" class="btn btn-danger dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                        @ViewBag.Selected
                    </button>
                    <ul class="dropdown-menu">
                        @foreach (var item in menuGroups)
                        {
                            <li><a class="dropdown-item" asp-action="index" asp-route-menuGroupID="@item.ID">@item.NameVN</a></li>
                        }
                </ul>
            </div>
            }
        </div>
        <a asp-action="Create" asp-controller="MenuItem" class="btn btn-success">Create New</a>
    </div>
    @if(Model != null)
    {
        <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.NameEN)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NameVN)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DescriptionEN)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DescriptionVN)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsActive)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.NameEN)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NameVN)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DescriptionEN)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DescriptionVN)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsActive)
                    </td>
                    <td class="d-flex justify-content-end">
                        <a asp-action="Update" asp-controller="MenuItem" asp-route-ID="@item.ID" class="btn btn-primary me-2">Details</a>
                        <a asp-action="Delete" asp-controller="MenuItem" asp-route-ID="@item.ID" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    }
</div>
